{"Formations": [{"titre": "Diplôme dingénieur en informatique (Ecole Nationale des Sciences Appliquées)", "date": "2012-2015", "établissement": "Ecole Nationale des Sciences Appliquées", "description": ""}, {"titre": "Classes préparatoires aux grandes écoles", "date": "2010-2012", "établissement": "", "description": ""}, {"titre": "DéveloppeurFullStackJavascript", "date": "2015-2017", "établissement": "4D logiciels", "description": "Wakanda (https://wakanda.github.io/) est une plateforme JavaScript pour développer et exécuter des applications Web ou mobiles. Wakanda se compose d'une stack d'outils et de technologies : - WakandaServer:Combine une base de données relationnelle avec un moteur JavaScript basé sur le V8 engine , elle Fournit une couche d'abstraction de base de données , une API REST générée automatiquement et une gestion de la couche de sécurité. - WakandaStudio:Un IDE moderne qui supporte en plus de la conception de la base de données et le développement JavaScript coté serveur, les différentes technologies front et mobile comme Angular et Ionic. Ma mission principale était la RD autour des technologies angularJS (Angular après sa sortie), Ionic(Ionic 2), et leur intégration dans Wakanda Studio. Autres : la mise en place de l'infrastructure d'intégration continue. Environnement:JavaScript , AngularJS , Angular, Gitlab, gitlab-ci."}], "Expériences professionnelles": [{"nom de l'entreprise": "Crédit Agricole CIB", "nom du poste occupé": "Lead Développeur Java / Angular", "durée": "Depuis 2021", "description": "Le rapatriement d'une application de give-up activity de Londres à Paris. C'est une application d'automatisation du calcul des expositions des positions en temps réel. Dans un environnement purement anglophone (Londres), j'ai eu l'opportunité de travailler sur des sujets divers :\n\n- Le rapatriement du projet de Londres à Paris: Assurer la transition du projet à Paris et revue et amélioration des développements.\n- Les vérifications pré-trade: La vérification de l'impact des trades sur le portfolio (Breaches, limites).\n- Les vérifications post-trade: La vérification de l'impact des trades sur le portfolio (Breaches, limites) en temps réel une fois les trades bookés.\n- Configuration des limites: Une interface graphique riche qui permet de configurer d'une manière très détaillée les limites, les devises acceptées.\n- Autres: Lead technico-fonctionnel, livraisons en production, support technique et fonctionnel, Scrum Master.", "environnement technique": "- Ecosystème Java/Spring: Architecture Microservice, java 8, Spring 5, Spring boot 2, hibernate, spring-data, spring-security, oauth2, eureka, swagger, Kafka, Junit.\n- Ecosystème TypeScript/Angular: Angular 5, typescript, bootstrap, HTML, CSS, Karma.\n- CI/CD: git, jenkins.\n- Méthodologie : Agile (Scrum), TDD, BDD.\n- Base de données: Oracle, SQL.\n- Outils: Postman, ELK."}, {"nom de l'entreprise": "Bnp Paribas CIB", "nom du poste occupé": "Développeur FullStack Sénior Java/Angular", "durée": "2020-2021", "description": "La réécriture de l'application connexis cash avec les nouvelles technologies. Connexis cash est une solution e-banking all-in-one, elle permet d'effectuer des transactions worldwide et d'avoir une vision globale sur l'ensemble des comptes des corporates. Dans un environnement très exigeant et agile, j'étais impliqué dans les projets suivants :\n\n- SCTInst (Sepa Credit Transfer Instant Payments): Etudes, développements et déploiement du projet from scratch : Étude de connectivité avec le moteur de paiement, développement de deux APIs principales : la vérification de l'éligibilité et l'exécution de paiement.\n- La génération des paiements: c'est un workflow très complexe pour générer les paiements XMLISO, MT101, en prenant en compte les spécificités de chaque pays et les préférences des clients. Après la génération des paiements ils sont redirigés vers le moteur du paiement correspondant en fonction du périmètre du client.\n- Paiements FX: L'intégration de la plateforme FX as API, ça permet d'obtenir le taux de change en temps réel.\n- Réécriture de la bibliothèque de déchiffrement avec PGP et BouncyCastle: Cette bibliothèque est utilisée pour déchiffrer les fichiers de paiements reçus dans le CFT de l'application, principalement utilisée par Heineken.\n- SDD-MANDATE: Le développement d'un module pour gérer les prélèvements et demander les refunds.\n- GatewayOnline: Un service dédié aux clients VIP, ça leur permet de faire un certain nombre d'actions comme la validation des paiements H2H via Connexis.\n- Autres: Développement des tests unitaires, des tests d'intégration, code review, release, déploiement.", "environnement technique": "- Ecosystème Java/Spring: Architecture microservice, java 8, Spring 5, Spring boot 2, hibernate, spring-data, spring-security, oauth2, eureka, swagger, ActiveMQ, Junit, fitnesse.\n- Ecosystème TypeScript/Angular: Angular 16, typescript, bootstrap, html, css, Karma.\n- CI/CD: git, jenkins.\n- Méthodologie : Agile (Scrum), TDD, BDD.\n- Base de données: Oracle, sql.\n- Outils: Postman, oracle sql developer, robot framework, splunk."}, {"nom de l'entreprise": "Société Générale CIB", "nom du poste occupé": "Développeur FullStack Java/Angular", "durée": "2017-2020", "description": "Le développement d'une application pour digitaliser le traitement de documents et automatiser les contrôles de conformité. L'objectif est d'améliorer les contrôles effectués par la banque et de réduire les risques opérationnels. Dans un environnement agile (modèle Spotify), j'étais impliqué dans les projets suivants :\n\n- Réécriture de l'UI: La réécriture de l'application front avec Angular 5.\n- Développement des différents modules de contrôle de conformité:\n  - Embargo-check: La vérification en temps réel des différentes sanctions: embargo, RSE, sanctions humanitaires.\n  - Vessels: Retracer les routes des bateaux détenus par l'entreprise, et vérifier ensuite si ces routes ne représentent pas de risques opérationnels.\n  - Individuals: Pour vérifier les interdits bancaires des individus...\n- Développement du module hitanalysis: C'est un module qui permet de présenter le résultat de l'analyse de l'intelligence artificielle aux opérateurs, ensuite ils doivent valider ce résultat.\n- Autres: Développement des tests unitaires, test d'intégration et des tests E2E, release des librairies et des micro services, code review. Ecriture des scénarii BDD en collaboration avec les Business analystes.", "environnement technique": "- Ecosystème Java/Spring: Architecture microservice, java 8, Spring 5, Spring boot 2, hibernate, spring-data, spring-security, oauth2, eureka, swagger, ActiveMQ, Junit, fitnesse.\n- Ecosystème TypeScript/Angular: Angular 5, typescript, bootstrap, html, css, karma, protractor.\n- CI/CD: git, jenkins, xl deploy.\n- Méthodologie: Agile (Scrum), TDD, BDD.\n- Base de données: Oracle, sql.\n- Outils: Postman, oracle sql developer, robot framework, ELK."}, {"nom de l'entreprise": "4D logiciels", "nom du poste occupé": "Développeur FullStack Javascript", "durée": "2015-2017", "description": "Wakanda (https://wakanda.github.io/) est une plateforme JavaScript pour développer et exécuter des applications Web ou mobiles. Wakanda se compose d'une stack d'outils et de technologies :\n\n- WakandaServer: Combine une base de données relationnelle avec un moteur JavaScript basé sur le V8 engine, elle fournit une couche d'abstraction de base de données, une API REST générée automatiquement et une gestion de la couche de sécurité.\n- WakandaStudio: Un IDE moderne qui supporte en plus de la conception de la base de données et le développement JavaScript côté serveur, les différentes technologies front et mobile comme Angular et Ionic.\n\nMa mission principale était la R&D autour des technologies angularJS (Angular après sa sortie), Ionic(Ionic 2), et leur intégration dans Wakanda Studio.\n\nAutres : la mise en place de l'infrastructure d'intégration continue.", "environnement technique": "JavaScript, AngularJS, Angular, Gitlab, gitlab-ci."}], "Compétences techniques": {"Langages de programmation": "Java, Typescript, JavaScript", "Framework": "Spring, Spring AOP, Spring Cloud, Spring Boot, Angular", "Base de données": "Oracle, PostGreSQL", "Logiciels": "Jenkins, Git, JIRA, Confluence, Postman, Swagger, ELK, Oracle SQL Developer", "Librairie": "Hibernate", "Bibliothèque": "BouncyCastle", "Système d'exploitation": "", "Serveur d'application": "", "Outils dataviz": "", "Méthodologie": "Agile (Scrum), TDD, BDD, Software Craftsmanship", "API Design": "", "Cloud Computing": "", "Devops": "Gitlab, gitlab-ci, XL Deploy", "Autres outils": "Kafka, ActiveMQ, Fitnesse, Protractor, Robot framework, Splunk"}, "Compétences fonctionnelles": {"Processus métiers bancaires": "", "Interlocuteurs privilégiés": "", "Périmètre fonctionnel": ""}, "Certifications": [{"nom": "Diplôme dingénieur en informatique (Ecole Nationale des Sciences Appliquées)", "date": "2012-2015"}, {"nom": "Classes préparatoires aux grandes écoles", "date": "2010-2012"}], "Langues": []}